<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.namyesol</groupId>
	<artifactId>petclinic</artifactId>
	<version>1.0-SNAPSHOT</version>

	<name>petclinic</name>
	<packaging>war</packaging>
	<description>Simple Application based on Spring MVC, MyBatis, JSP, Oracle Database 11g</description>
	<url>https://github.com/namyesol/spring-mvc-petclinic</url>

	<properties>
		<!-- Generic properties-->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<!-- Srping Framework-->
		<spring-framework.version>5.3.29</spring-framework.version>

		<!-- Java EE / Java SE dependencies -->
		<servlet-api.version>3.1.0</servlet-api.version>
		<jsp-api.version>2.3.3</jsp-api.version>
		<el-api.version>3.0.0</el-api.version>
		<javax-jstl.version>1.2</javax-jstl.version>
		<javax-el.version>3.0.1-b12</javax-el.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>
        <jaxb-runtime.version>2.3.4</jaxb-runtime.version>
        <javax-activation.version>1.2.0</javax-activation.version>
		<!-- Persistence -->
		<mybatis.version>3.5.13</mybatis.version>
		<mybatis-spring.version>2.1.1</mybatis-spring.version>
		<oracle-driver.version>11.2.0.1.0</oracle-driver.version>
		
		<commons-dbcp.version>2.9.0</commons-dbcp.version>
		<commons-io.version>2.13.0</commons-io.version>
		<commons-fileupload.version>1.5</commons-fileupload.version>
		<apache-tika.version>2.8.0</apache-tika.version>
		
		<!-- Logging -->
		<slf4j.version>1.7.32</slf4j.version>
		<logback.version>1.2.11</logback.version>
		
		<!-- Test -->
		<assertj.version>3.20.2</assertj.version>
		<json-path.version>2.8.0</json-path.version>
		<mockito.version>3.12.4</mockito.version>
		<hamcrest.version>2.2</hamcrest.version>
		<junit.version>4.13.2</junit.version>

		<!-- Validation -->
		<javax-validation.version>2.0.1.Final</javax-validation.version>
		<hibernate-validator.version>6.2.0.Final</hibernate-validator.version>

		<!-- JSON -->
		<jackson.version>2.15.2</jackson.version>

		<!-- Maven plugins -->
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
        <jacoco-maven-plugin>0.8.6</jacoco-maven-plugin>
		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		
        <!-- Web dependencies -->
        <!-- Version update should also be done in wro.xml, petclinic.less and static resources: htmlHeader.tag and footer.tag-->
        <webjars-bootstrap.version>3.3.6</webjars-bootstrap.version>
        <webjars-jquery-ui.version>1.11.4</webjars-jquery-ui.version>
        <webjars-jquery.version>2.2.4</webjars-jquery.version>
        <wro4j.version>1.8.0</wro4j.version>
	</properties>

	<dependencies>

		<!-- Spring Frameworks -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>

		<!-- Persistence  -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons-dbcp.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${apache-tika.version}</version>
		</dependency>

		<!-- JAVA EE / Java SE -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>${jsp-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${javax-jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>${el-api.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>${javax-el.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax-validation.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${json-path.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-framework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>


        <!-- JAXB and Activation added for Java 9 compatibility.
             The JAXB API is considered to be Java EE API and therefore is
             no longer contained on the default class path in Java SE 9 -->
			 <dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-runtime</artifactId>
				<version>${jaxb-runtime.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>javax.activation-api</artifactId>
				<version>${javax-activation.version}</version>
			</dependency>
		
			<!-- Webjars -->
	        <dependency>
	            <groupId>org.webjars</groupId>
	            <artifactId>jquery</artifactId>
	            <version>${webjars-jquery.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.webjars</groupId>
	            <artifactId>jquery-ui</artifactId>
	            <version>${webjars-jquery-ui.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.webjars</groupId>
	            <artifactId>bootstrap</artifactId>
	            <version>${webjars-bootstrap.version}</version>
	        </dependency>
	</dependencies>

	<!-- Maven plugin versions are mentioned in order to guarantee the build reproducibility in the long term -->
	<build>
		<defaultGoal>install</defaultGoal>
		<finalName>petclinic</finalName>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<!-- declared explicitly so Spring config files can be placed next to their corresponding JUnit test class -->
				<directory>${project.basedir}/src/test/java</directory>
			</testResource>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
				</plugin>
				<!-- Specify the encoding for copying resources -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/*IntegrationTest.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<includes>
							<include>**/*IntegrationTest.java</include>
						</includes>
					</configuration>
				</plugin>
				<!-- Test Coverage Report -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Integration With Eclipse IDE -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<wtpversion>2.0</wtpversion>
						<wtpContextName>/</wtpContextName>
						<sourceIncludes>
							<sourceInclude>**/*.*</sourceInclude>
						</sourceIncludes>
						<additionalBuildcommands>
							<buildCommand>
								<name>org.springframework.ide.eclipse.core.springbuilder</name>
							</buildCommand>
							<buildCommand>
								<name>org.eclipse.m2e.core.maven2Builder</name>
							</buildCommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>org.eclipse.jdt.core.javanature</projectnature>
							<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
							<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
						</additionalProjectnatures>
					</configuration>
				</plugin>

				<plugin>
	                <groupId>ro.isdc.wro4j</groupId>
	                <artifactId>wro4j-maven-plugin</artifactId>
	                <version>${wro4j.version}</version>
	                <executions>
	                    <execution>
	                        <phase>generate-resources</phase>
	                        <goals>
	                            <goal>run</goal>
	                        </goals>
	                    </execution>
	                </executions>
	                <configuration>
	                    <wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
	                    <cssDestinationFolder>${project.build.directory}/petclinic/resources/css</cssDestinationFolder>
	                    <wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
	                    <extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
	                    <contextFolder>${basedir}/src/main/webapp/resources/less</contextFolder>
	                </configuration>
	                <dependencies>
	                    <dependency>
	                        <groupId>org.webjars</groupId>
	                        <artifactId>bootstrap</artifactId>
	                        <version>${webjars-bootstrap.version}</version>
	                    </dependency>
	                </dependencies>
	            </plugin>
			</plugins>
		</pluginManagement>
		
	</build>

	<profiles>
		<profile>
			<id>Oracle</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<db.script>oracle</db.script>
				<jdbc.driverClassName>oracle.jdbc.driver.OracleDriver</jdbc.driverClassName>
				<jdbc.url>jdbc:oracle:thin:@localhost:1521:xe</jdbc.url>
				<jdbc.username>petclinic</jdbc.username>
				<jdbc.password>petclinic</jdbc.password>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.jslsolucoes</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>${oracle-driver.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>